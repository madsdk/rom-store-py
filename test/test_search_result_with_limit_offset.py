# coding: utf-8

"""
    ROM Store API

    API for querying, managing and accessing a TOSEC ROM store.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_result_with_limit_offset import SearchResultWithLimitOffset

class TestSearchResultWithLimitOffset(unittest.TestCase):
    """SearchResultWithLimitOffset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResultWithLimitOffset:
        """Test SearchResultWithLimitOffset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResultWithLimitOffset`
        """
        model = SearchResultWithLimitOffset()
        if include_optional:
            return SearchResultWithLimitOffset(
                count = 56,
                offset = 56,
                limit = 56,
                total = 56,
                results = [
                    openapi_client.models.search_result.SearchResult(
                        gamefile = openapi_client.models.game_file.GameFile(
                            id = 56, 
                            name = '', 
                            demo = True, 
                            system = '', 
                            video = '', 
                            country = '', 
                            language = '', 
                            dev_status = '', 
                            media = '', 
                            copyright = '', 
                            cracked = True, 
                            fixed = True, 
                            hacked = True, 
                            modified = True, 
                            pirated = True, 
                            trained = True, 
                            translated = True, 
                            overdumped = True, 
                            underdumped = True, 
                            virus = True, 
                            baddump = True, 
                            alternate = True, 
                            verified = True, 
                            platform_id = 56, 
                            game_id = 56, 
                            rom_count = 56, ), 
                        game = openapi_client.models.game.Game(
                            id = 56, 
                            name = '', 
                            date = '', 
                            publisher = '', ), 
                        platform = openapi_client.models.platform.Platform(
                            id = 56, 
                            name = '', 
                            short_name = '', 
                            format = '', ), )
                    ]
            )
        else:
            return SearchResultWithLimitOffset(
                count = 56,
                offset = 56,
                limit = 56,
                total = 56,
                results = [
                    openapi_client.models.search_result.SearchResult(
                        gamefile = openapi_client.models.game_file.GameFile(
                            id = 56, 
                            name = '', 
                            demo = True, 
                            system = '', 
                            video = '', 
                            country = '', 
                            language = '', 
                            dev_status = '', 
                            media = '', 
                            copyright = '', 
                            cracked = True, 
                            fixed = True, 
                            hacked = True, 
                            modified = True, 
                            pirated = True, 
                            trained = True, 
                            translated = True, 
                            overdumped = True, 
                            underdumped = True, 
                            virus = True, 
                            baddump = True, 
                            alternate = True, 
                            verified = True, 
                            platform_id = 56, 
                            game_id = 56, 
                            rom_count = 56, ), 
                        game = openapi_client.models.game.Game(
                            id = 56, 
                            name = '', 
                            date = '', 
                            publisher = '', ), 
                        platform = openapi_client.models.platform.Platform(
                            id = 56, 
                            name = '', 
                            short_name = '', 
                            format = '', ), )
                    ],
        )
        """

    def testSearchResultWithLimitOffset(self):
        """Test SearchResultWithLimitOffset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
