# coding: utf-8

"""
    ROM Store API

    API for querying, managing and accessing a TOSEC ROM store.

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.game_list_with_limit_offset import GameListWithLimitOffset

class TestGameListWithLimitOffset(unittest.TestCase):
    """GameListWithLimitOffset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameListWithLimitOffset:
        """Test GameListWithLimitOffset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameListWithLimitOffset`
        """
        model = GameListWithLimitOffset()
        if include_optional:
            return GameListWithLimitOffset(
                count = 56,
                offset = 56,
                limit = 56,
                total = 56,
                games = [
                    openapi_client.models.game.Game(
                        id = 56, 
                        name = '', 
                        date = '', 
                        publisher = '', )
                    ]
            )
        else:
            return GameListWithLimitOffset(
                count = 56,
                offset = 56,
                limit = 56,
                total = 56,
                games = [
                    openapi_client.models.game.Game(
                        id = 56, 
                        name = '', 
                        date = '', 
                        publisher = '', )
                    ],
        )
        """

    def testGameListWithLimitOffset(self):
        """Test GameListWithLimitOffset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
